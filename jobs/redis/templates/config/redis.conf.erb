daemonize no
port <%= p("redis.port") %>
bind <%= p("redis.listen_on_instance_ip") ? spec.ip : "0.0.0.0" %>
protected-mode <%= p("redis.protected_mode") ? "yes" : "no" %>

dir "/var/vcap/store/redis"
databases 16
maxclients <%= (p("redis.maxclients").to_i > 0) ? p("redis.maxclients") : 10000 %>

timeout 0
tcp-keepalive 300
loglevel notice
logfile /var/vcap/sys/log/redis/redis.log

<%- (p("redis.save_intervals")).each do |rule| -%>
save <%= rule %>
<% end %>
<%- if p("redis.save_intervals").empty? -%>
save ""
<%- end -%>
stop-writes-on-bgsave-error yes
rdbcompression yes
rdbchecksum yes
dbfilename dump.rdb

<%- if_p("redis.replication.enabled") do |enabled| -%>
  <%- if enabled -%>
    <%- unless spec.bootstrap -%>
<%# @formatter:off -%>
# --- Replication ---
replicaof <%= link("redis").instances.find { |r| r.bootstrap }.address %> <%= p("redis.port") %>
# Authenticate replicas to master using the replication user from ACL
masteruser "<%= p("redis.replication.user") %>"
masterauth "<%= p("redis.replication.password") %>"
<%# @formatter:on -%>
    <%- end -%>
  <%- end -%>
<%- end -%>

# --- Replica behavior ---
replica-serve-stale-data yes
replica-read-only yes
repl-disable-tcp-nodelay no
replica-priority 100

# --- Persistence (AOF/RDB) ---
appendonly no
appendfsync everysec
no-appendfsync-on-rewrite no
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb
aof-rewrite-incremental-fsync yes

# --- Scripting & slowlog ---
lua-time-limit 5000
slowlog-log-slower-than 10000
slowlog-max-len 128

# --- Data encodings ---
# Hash
hash-max-listpack-entries 512
hash-max-listpack-value 64

# Set
set-max-intset-entries 512

# Sorted set
zset-max-listpack-entries 128
zset-max-listpack-value 64

# --- Housekeeping ---
activerehashing yes

# Output buffer limits
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60

# Timers
hz 10

# --- ACL inline (source of truth) ---
user default off
user <%= p('redis.admin.user') %> on >"<%= p('redis.admin.password') %>" ~* &* +@all -ACL -CONFIG
user <%= p("redis.metrics.user") %> on >"<%= p("redis.metrics.password") %>" ~* &* +@read +info +memory +latency +slowlog +client +config
<%- if_p("redis.replication.enabled") do |enabled| -%>
  <%- if enabled -%>
<%# @formatter:off -%>
# replication user (used by replicas and Sentinel)
user <%= p("redis.replication.user") %> on >"<%= p("redis.replication.password") %>" ~* &* +psync +replconf +info +role +replicaof +slaveof +config +ping
<%# @formatter:on -%>
  <%- end -%>
<%- end -%>


# --- Custom config ---
<% p('redis.custom_config', []).each do |line| -%>
<%# @formatter:off -%>
<%= line %>
<%# @formatter:on -%>
<%- end -%>

