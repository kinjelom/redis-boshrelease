<%-
  master_name = p("sentinel.master_name")
  announce_ip = p("sentinel.announce_ip") rescue ""
  announce_port = (p("sentinel.announce_port") rescue 0).to_i
-%>
daemonize no
port <%= p("sentinel.port") %>
bind <%= p("sentinel.listen_on_instance_ip") ? spec.ip : "0.0.0.0" %>
protected-mode yes
dir "/var/vcap/data/redis-sentinel"

# Monitor the master (bootstrap instance)
sentinel monitor <%= master_name %> <%= link("redis").instances.find { |r| r.bootstrap }.address %> <%= link("redis").p("redis.port") %> <%= p("sentinel.quorum") %>

<%- link("redis").if_p("redis.replication.enabled") do |enabled| -%>
  <%- if enabled -%>
<%# @formatter:off -%>
# Authenticate to master using the replication user from ACL
sentinel auth-user <%= master_name %>  <%= link("redis").p("redis.replication.user") %>
sentinel auth-pass <%= master_name %> "<%= link("redis").p("redis.replication.password") %>"
<%# @formatter:on -%>
  <%- end -%>
<%- end -%>

# Operational defaults (per master)
sentinel down-after-milliseconds <%= master_name %> 5000
sentinel parallel-syncs          <%= master_name %> 1
sentinel failover-timeout        <%= master_name %> 10000
sentinel deny-scripts-reconfig yes

# --- Custom config ---
<% p('sentinel.custom_config', []).each do |line| -%>
<%# @formatter:off -%>
<%= line %>
<%# @formatter:on -%>
<%- end -%>
